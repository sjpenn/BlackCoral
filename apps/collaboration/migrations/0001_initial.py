# Generated by Django 5.2.5 on 2025-08-14 00:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("opportunities", "0004_add_ai_analysis_fields"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProposalTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("forming", "Forming"),
                            ("active", "Active"),
                            ("submitting", "Submitting"),
                            ("completed", "Completed"),
                            ("disbanded", "Disbanded"),
                        ],
                        default="forming",
                        max_length=20,
                    ),
                ),
                ("kickoff_date", models.DateTimeField(blank=True, null=True)),
                ("submission_deadline", models.DateTimeField(blank=True, null=True)),
                ("total_hours_logged", models.FloatField(default=0.0)),
                (
                    "budget_allocated",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "budget_spent",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "capture_manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="captured_teams",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lead",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="led_teams",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "opportunity",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposal_team",
                        to="opportunities.opportunity",
                    ),
                ),
                (
                    "proposal_manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_teams",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProposalSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "section_number",
                    models.CharField(help_text="e.g., 1.1, 2.3.1", max_length=20),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("draft_complete", "Draft Complete"),
                            ("under_review", "Under Review"),
                            ("revision_needed", "Revision Needed"),
                            ("approved", "Approved"),
                            ("final", "Final"),
                        ],
                        default="not_started",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "requirements",
                    models.TextField(
                        blank=True, help_text="Section requirements and guidelines"
                    ),
                ),
                ("word_count_target", models.IntegerField(blank=True, null=True)),
                ("word_count_current", models.IntegerField(default=0)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "draft_file",
                    models.FileField(
                        blank=True, null=True, upload_to="proposal_drafts/"
                    ),
                ),
                (
                    "final_file",
                    models.FileField(
                        blank=True, null=True, upload_to="proposal_sections/"
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_sections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="sections_to_review",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sections",
                        to="collaboration.proposalteam",
                    ),
                ),
            ],
            options={
                "ordering": ["section_number"],
            },
        ),
        migrations.CreateModel(
            name="ProposalMilestone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "milestone_type",
                    models.CharField(
                        choices=[
                            ("kickoff", "Kickoff Meeting"),
                            ("outline_complete", "Outline Complete"),
                            ("draft_complete", "First Draft Complete"),
                            ("review_complete", "Review Complete"),
                            ("final_draft", "Final Draft Ready"),
                            ("compliance_check", "Compliance Check Complete"),
                            ("final_review", "Final Review Complete"),
                            ("submission_ready", "Ready for Submission"),
                            ("submitted", "Submitted"),
                            ("award_notification", "Award Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("target_date", models.DateTimeField()),
                ("actual_date", models.DateTimeField(blank=True, null=True)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "depends_on",
                    models.ManyToManyField(
                        blank=True,
                        related_name="dependent_milestones",
                        to="collaboration.proposalmilestone",
                    ),
                ),
                (
                    "responsible_person",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="milestones",
                        to="collaboration.proposalteam",
                    ),
                ),
            ],
            options={
                "ordering": ["target_date"],
            },
        ),
        migrations.CreateModel(
            name="TaskItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("research", "Research"),
                            ("writing", "Writing"),
                            ("review", "Review"),
                            ("coordination", "Coordination"),
                            ("analysis", "Analysis"),
                            ("compliance", "Compliance Check"),
                            ("editing", "Editing"),
                            ("formatting", "Formatting"),
                            ("meeting", "Meeting"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("todo", "To Do"),
                            ("in_progress", "In Progress"),
                            ("waiting", "Waiting"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="todo",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("estimated_hours", models.FloatField(default=0.0)),
                ("actual_hours", models.FloatField(default=0.0)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "progress_percentage",
                    models.IntegerField(
                        default=0, help_text="Progress percentage (0-100)"
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "depends_on",
                    models.ManyToManyField(
                        blank=True,
                        related_name="blocking_tasks",
                        to="collaboration.taskitem",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tasks",
                        to="collaboration.proposalsection",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="collaboration.proposalteam",
                    ),
                ),
            ],
            options={
                "ordering": ["-priority", "due_date", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="TeamComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "comment_type",
                    models.CharField(
                        choices=[
                            ("general", "General Discussion"),
                            ("task", "Task Comment"),
                            ("section", "Section Comment"),
                            ("review", "Review Comment"),
                            ("decision", "Decision Required"),
                            ("update", "Status Update"),
                            ("issue", "Issue/Problem"),
                            ("solution", "Solution/Resolution"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("content", models.TextField()),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "attachments",
                    models.JSONField(
                        blank=True, default=list, help_text="File attachment references"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "mentioned_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="mentioned_in_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_comment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="collaboration.teamcomment",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="collaboration.proposalsection",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="collaboration.taskitem",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="collaboration.proposalteam",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TeamMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("lead", "Team Lead"),
                            ("capture_manager", "Capture Manager"),
                            ("proposal_manager", "Proposal Manager"),
                            ("technical_lead", "Technical Lead"),
                            ("writer", "Proposal Writer"),
                            ("reviewer", "Reviewer"),
                            ("sme", "Subject Matter Expert"),
                            ("coordinator", "Coordinator"),
                            ("analyst", "Analyst"),
                            ("editor", "Editor"),
                            ("compliance", "Compliance Specialist"),
                            ("pricing", "Pricing Analyst"),
                        ],
                        max_length=20,
                    ),
                ),
                ("responsibilities", models.TextField(blank=True)),
                (
                    "hours_committed",
                    models.FloatField(
                        default=0.0, help_text="Hours committed to this proposal"
                    ),
                ),
                (
                    "hours_logged",
                    models.FloatField(default=0.0, help_text="Actual hours logged"),
                ),
                ("availability_start", models.DateTimeField(blank=True, null=True)),
                ("availability_end", models.DateTimeField(blank=True, null=True)),
                ("tasks_assigned", models.IntegerField(default=0)),
                ("tasks_completed", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("left_at", models.DateTimeField(blank=True, null=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="collaboration.proposalteam",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["role", "user__last_name"],
            },
        ),
        migrations.AddField(
            model_name="proposalteam",
            name="members",
            field=models.ManyToManyField(
                related_name="proposal_teams",
                through="collaboration.TeamMembership",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="TimeLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("date", models.DateField()),
                ("hours", models.FloatField()),
                ("description", models.TextField()),
                ("is_approved", models.BooleanField(default=False)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_time_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="time_logs",
                        to="collaboration.proposalsection",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="time_logs",
                        to="collaboration.taskitem",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_logs",
                        to="collaboration.proposalteam",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-date", "-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="proposalsection",
            index=models.Index(fields=["status"], name="collaborati_status_d3e250_idx"),
        ),
        migrations.AddIndex(
            model_name="proposalsection",
            index=models.Index(
                fields=["priority"], name="collaborati_priorit_177c54_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proposalsection",
            index=models.Index(
                fields=["due_date"], name="collaborati_due_dat_c7bcd2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proposalmilestone",
            index=models.Index(
                fields=["team", "target_date"], name="collaborati_team_id_6d4eb5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proposalmilestone",
            index=models.Index(
                fields=["is_completed"], name="collaborati_is_comp_4b5e65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskitem",
            index=models.Index(fields=["status"], name="collaborati_status_197a7e_idx"),
        ),
        migrations.AddIndex(
            model_name="taskitem",
            index=models.Index(
                fields=["priority"], name="collaborati_priorit_f15c8f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskitem",
            index=models.Index(
                fields=["due_date"], name="collaborati_due_dat_a6531d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskitem",
            index=models.Index(
                fields=["assigned_to"], name="collaborati_assigne_247976_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teamcomment",
            index=models.Index(
                fields=["team", "-created_at"], name="collaborati_team_id_d09ff2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teamcomment",
            index=models.Index(
                fields=["comment_type"], name="collaborati_comment_8026ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teamcomment",
            index=models.Index(
                fields=["is_resolved"], name="collaborati_is_reso_089263_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="teammembership",
            unique_together={("team", "user", "role")},
        ),
        migrations.AddIndex(
            model_name="proposalteam",
            index=models.Index(fields=["status"], name="collaborati_status_f37d6e_idx"),
        ),
        migrations.AddIndex(
            model_name="proposalteam",
            index=models.Index(
                fields=["submission_deadline"], name="collaborati_submiss_1c35ec_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="timelog",
            index=models.Index(
                fields=["team", "date"], name="collaborati_team_id_fd2ffc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="timelog",
            index=models.Index(
                fields=["user", "date"], name="collaborati_user_id_d61534_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="timelog",
            index=models.Index(
                fields=["is_approved"], name="collaborati_is_appr_9585ba_idx"
            ),
        ),
    ]
